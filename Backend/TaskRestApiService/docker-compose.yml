version: '2.4'

services:
  task-rest-api-service:
    build: ./docker/
    container_name: task-rest-api-service
    volumes:
      - .:/usr/local/bin/
    ports:
      - "5437:8999" # api port
      - "2345:2345" # debugger port
    networks:
      - task-network
    command: [
      ./docker/debug.sh
    ]
    depends_on:
      kafka:
        condition: service_healthy
    restart: always
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - task-network
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - task-network
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 5
  fluentd:
    build: ./fluentd
    volumes:
      - ./fluentd/fluent.conf:/fluentd/etc/fluent.conf
    restart: always
    depends_on:
      kafka:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    networks:
      - task-network
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.1
    container_name: elasticsearch
    hostname: elasticsearch
    restart: always
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false # Disable security for testing
    healthcheck:
      # Check whether service is ready
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 10s
      retries: 5
      timeout: 5s
    ports:
      - "9200:9200"
    networks:
        - task-network
  # Kibana для визуализации логов
  kibana:
    image: docker.elastic.co/kibana/kibana:8.17.1
    container_name: kibana
    restart: always
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    networks:
      - task-network
networks:
  task-network:
    external: true
volumes:
  esdata:
    driver: local